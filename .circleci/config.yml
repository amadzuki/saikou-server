version: 2.1

orbs:
  node: circleci/node@4.0.0

jobs:
  preparation:
    docker:
      - image: cimg/node:current
    steps:
      - checkout
      - run:
          name: Check Git branch
          command: echo "${CIRCLE_BRANCH}"
      - run:
          name: Compute Circle CI version number
          command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
      - run:
          name: Check SSH access
          command: |
            ssh -o "StrictHostKeyChecking=no" -q $SERVER_USER@$SERVER_HOST exit
      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps
      - run:
          name: Install all dependencies
          command: yarn install --production=false
          # Don't use node/install as it doesn't install devDependencies
      - save_cache:
          paths:
            - node_modules
          key: yarn-deps-{{ checksum "yarn.lock" }}-{{ epoch }}
      - store_artifacts:
          path: yarn.lock
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    docker:
      # The primary container is an instance of the first image listed. The job's commands run in this container.
      - image: cimg/node:current
      # The secondary container is an instance of the second listed image which is run in a common network where ports exposed on the primary container are available on localhost.
      - image: mongo:4.2
    steps:
      # Reuse the workspace from the previous job
      - attach_workspace:
          at: .
      - run:
          name: Demonstrate that MongoDB is available as localhost
          command: |
            curl -sSJL https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list
            sudo apt update
            sudo apt install mongodb-org
            mongo localhost --eval 'db.serverStatus()'
      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps
  deploy:
    docker:
      - image: cimg/node:current
    steps:
      # Reuse the workspace from the previous job
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps
      - run:
          name: Deploy to production server
          command: yarn pm2:deploy

workflows:
  version: 2
  workflows:
    jobs:
      - preparation
      - test:
          requires:
            - preparation
      - deploy:
          requires:
            - preparation
            - test
